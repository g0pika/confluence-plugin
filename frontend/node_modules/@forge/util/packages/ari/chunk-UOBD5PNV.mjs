import {
  BeaconDetectionAriResourceOwner,
  BeaconDetectionAriResourceType
} from "./chunk-L27OOBSM.mjs";
import {
  RegisteredAri
} from "./chunk-PA4Y7TWI.mjs";
import {
  AriParser
} from "./chunk-2UUYVBKT.mjs";

// src/beacon/detection/manifest.ts
var beaconDetectionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  resourceOwner: BeaconDetectionAriResourceOwner,
  resourceType: BeaconDetectionAriResourceType,
  resourceIdSlug: "{detectionId}",
  resourceIdSegmentFormats: {
    detectionId: /[a-zA-Z0-9\_]+([-][a-zA-Z0-9\_]+){2}/
    // eslint-disable-line no-useless-escape
  }
};

// src/beacon/detection/index.ts
var BeaconDetectionAri = class _BeaconDetectionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._detectionId = opts.resourceIdSegmentValues.detectionId;
  }
  get detectionId() {
    return this._detectionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: beaconDetectionAriStaticOpts.qualifier,
      platformQualifier: beaconDetectionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: beaconDetectionAriStaticOpts.resourceOwner,
      resourceType: beaconDetectionAriStaticOpts.resourceType,
      resourceId: `${opts.detectionId}`,
      resourceIdSegmentValues: {
        detectionId: opts.detectionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconDetectionAriStaticOpts);
    return new _BeaconDetectionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, beaconDetectionAriStaticOpts);
    return new _BeaconDetectionAri(opts);
  }
  getVariables() {
    return {
      detectionId: this.detectionId
    };
  }
};

export {
  BeaconDetectionAri
};
