"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var checkbox_1 = tslib_1.__importDefault(require("@atlaskit/icon/glyph/checkbox"));
var checkbox_indeterminate_1 = tslib_1.__importDefault(require("@atlaskit/icon/glyph/checkbox-indeterminate"));
var Checkbox_1 = require("./styled/Checkbox");
var CheckboxIcon = /** @class */ (function (_super) {
    tslib_1.__extends(CheckboxIcon, _super);
    function CheckboxIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CheckboxIcon.prototype.render = function () {
        var _a = this.props, isChecked = _a.isChecked, isDisabled = _a.isDisabled, isInvalid = _a.isInvalid, isActive = _a.isActive, isFocused = _a.isFocused, isHovered = _a.isHovered, isIndeterminate = _a.isIndeterminate, primaryColor = _a.primaryColor, secondaryColor = _a.secondaryColor;
        return (react_1.default.createElement(Checkbox_1.IconWrapper, { isChecked: isChecked, isDisabled: isDisabled, isFocused: isFocused, isActive: isActive, isHovered: isHovered, isInvalid: isInvalid }, isIndeterminate ? (react_1.default.createElement(checkbox_indeterminate_1.default, { primaryColor: primaryColor, secondaryColor: secondaryColor, label: "" })) : (react_1.default.createElement(checkbox_1.default, { primaryColor: primaryColor, secondaryColor: secondaryColor, label: "" }))));
    };
    CheckboxIcon.defaultProps = {
        primaryColor: 'inherit',
        secondaryColor: 'inherit',
        isIndeterminate: false,
    };
    return CheckboxIcon;
}(react_1.Component));
exports.default = CheckboxIcon;
//# sourceMappingURL=CheckboxIcon.js.map