/** @jsx jsx */
import { jsx } from '@emotion/core';
import { Skeleton as SkeletonAvatar } from '@atlaskit/avatar';
import { gridSize as gridSizeFn } from '@atlaskit/theme/constants';
const gridSize = gridSizeFn();
/* Primitives */
const Wrapper = ({ isAvatarHidden, isHeader, ...props }) => (jsx("div", Object.assign({ css: {
        display: 'flex',
        alignItems: 'center',
        margin: isAvatarHidden
            ? `${gridSize * 2}px`
            : `${gridSize / 2}px ${gridSize}px ${gridSize}px ${gridSize * 2}px`,
        ...(isHeader && !isAvatarHidden ? { marginLeft: `${gridSize}px` } : {}),
    } }, props)));
const headerStylesOverride = (isAvatarHidden) => ({
    ...(!isAvatarHidden ? { marginLeft: `${gridSize * 2}px` } : null),
    width: `${gridSize * 18}px`,
    opacity: 0.3,
});
const SkeletonText = ({ isAvatarHidden, isHeader, itemTextWidth, }) => (jsx("div", { css: {
        height: `${gridSize * 2.5}px`,
        backgroundColor: 'currentColor',
        borderRadius: gridSize / 2,
        opacity: 0.15,
        width: itemTextWidth || `${gridSize * 17}px`,
        ...(!isAvatarHidden ? { marginLeft: `${gridSize * 3}px` } : null),
        ...(isHeader ? headerStylesOverride(isAvatarHidden) : null),
    } }));
/* Exported Components */
export const DrawerSkeletonHeader = (props) => {
    const { isAvatarHidden, isCollapsed } = props;
    return (jsx(Wrapper, { isAvatarHidden: isAvatarHidden, isHeader: true },
        !isAvatarHidden && (jsx(SkeletonAvatar, { appearance: "square", size: "large", weight: "strong" })),
        !isCollapsed && (jsx(SkeletonText, { isHeader: true, isAvatarHidden: isAvatarHidden }))));
};
export const DrawerSkeletonItem = (props) => {
    const { isAvatarHidden, isCollapsed, itemTextWidth } = props;
    return (jsx(Wrapper, { isAvatarHidden: isAvatarHidden },
        !isAvatarHidden && jsx(SkeletonAvatar, { size: "small", weight: "normal" }),
        !isCollapsed && (jsx(SkeletonText, { itemTextWidth: itemTextWidth, isAvatarHidden: isAvatarHidden }))));
};
//# sourceMappingURL=skeletons.js.map