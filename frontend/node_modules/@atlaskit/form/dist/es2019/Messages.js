import React from 'react';
import styled from 'styled-components';
import SuccessIcon from '@atlaskit/icon/glyph/editor/success';
import ErrorIcon from '@atlaskit/icon/glyph/error';
import { G400, N200, R400 } from '@atlaskit/theme/colors';
import { gridSize } from '@atlaskit/theme/constants';
import { multiply } from '@atlaskit/theme/math';
import { h200 } from '@atlaskit/theme/typography';
import { FieldId } from './Field';
const Message = styled.div `
  ${h200} font-weight: normal;
  color: ${props => {
    if (props.error) {
        return R400;
    }
    if (props.valid) {
        return G400;
    }
    return N200;
}};
  margin-top: ${multiply(gridSize, 0.5)}px;
  display: flex;
  justify-content: baseline;
`;
const IconWrapper = styled.span `
  display: flex;
`;
export const HelperMessage = ({ children, testId }) => (React.createElement(FieldId.Consumer, null, fieldId => (React.createElement(Message, { id: fieldId ? `${fieldId}-helper` : undefined, "data-testid": testId }, children))));
export const ErrorMessage = ({ children, testId }) => (React.createElement(FieldId.Consumer, null, fieldId => (React.createElement(Message, { error: true, id: fieldId ? `${fieldId}-error` : undefined, "data-testid": testId },
    React.createElement(IconWrapper, null,
        React.createElement(ErrorIcon, { size: "small", label: "error" })),
    children))));
export const ValidMessage = ({ children, testId }) => (React.createElement(FieldId.Consumer, null, fieldId => (React.createElement(Message, { valid: true, id: fieldId ? `${fieldId}-valid` : undefined, "data-testid": testId },
    React.createElement(IconWrapper, null,
        React.createElement(SuccessIcon, { size: "small", label: "success" })),
    children))));
//# sourceMappingURL=Messages.js.map