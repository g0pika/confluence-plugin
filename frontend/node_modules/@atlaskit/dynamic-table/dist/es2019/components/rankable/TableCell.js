import React from 'react';
import withDimensions from '../../hoc/withDimensions';
import { inlineStylesIfRanking } from '../../internal/helpers';
import { RankableTableBodyCell } from '../../styled/rankable/TableCell';
export class RankableTableCell extends React.Component {
    render() {
        const { cell, head, isFixedSize, isRanking, innerRef, refWidth, } = this.props;
        const { content, ...restCellProps } = cell;
        const { shouldTruncate, width } = head || {};
        const inlineStyles = inlineStylesIfRanking(isRanking, refWidth);
        return (React.createElement(RankableTableBodyCell, Object.assign({}, restCellProps, { isFixedSize: isFixedSize, shouldTruncate: shouldTruncate, width: width, isRanking: isRanking, style: inlineStyles, innerRef: innerRef, onKeyDown: (e) => e.stopPropagation() }), content));
    }
}
export default withDimensions(RankableTableCell);
//# sourceMappingURL=TableCell.js.map