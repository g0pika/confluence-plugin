"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useHeadingLevel = exports.useHeading = exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
// Allows support for heading levels 1-9 via aria-level

var HeadingLevelContext = /*#__PURE__*/(0, _react.createContext)(0);

/**
 * @internal
 * @returns The current heading level context.
 */
var useHeadingLevel = exports.useHeadingLevel = function useHeadingLevel() {
  return (0, _react.useContext)(HeadingLevelContext);
};

/**
 * Infers the correct heading markup based on the current heading level context.
 */
var useHeading = exports.useHeading = function useHeading(fallback) {
  var hLevel = useHeadingLevel();
  /**
   * Order here is important, we for now apply
   * 1. inferred a11y level (this only applies if context is present)
   * 2. default final fallback
   */
  return [hLevel, hLevel && (hLevel > 6 ? 'div' : "h".concat(hLevel)) || fallback];
};
/**
 * __Heading level provider__
 *
 * The Heading level provider injects the heading level to all `Heading` components below it in the component tree.
 *
 * @example
 * ```tsx
 * // Will correctly infer the heading level
 * <HeadingContext value={1}>
 *  <Heading>H1</Heading>
 *  <HeadingContext>
 *    <Heading>H2</Heading>
 *  </HeadingContext>
 * </HeadingContext>
 * ```
 */
var HeadingLevelContextProvider = function HeadingLevelContextProvider(_ref) {
  var children = _ref.children,
    value = _ref.value;
  var parentHeadingLevel = useHeadingLevel();
  var headingLevel = parentHeadingLevel + 1;
  return /*#__PURE__*/_react.default.createElement(HeadingLevelContext.Provider, {
    value: value || headingLevel
  }, children);
};
var _default = exports.default = HeadingLevelContextProvider;