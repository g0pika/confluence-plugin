import React from 'react';
import { Theme as ButtonTheme } from '@atlaskit/button';
import { N0, N50A, N60A, P300 } from '@atlaskit/theme/colors';
import Card from './Card';
import { spotlightButtonTheme } from './theme';
class SpotlightCard extends React.Component {
    render() {
        const { actions, actionsBeforeElement, children, components, isFlat, heading, headingAfterElement, image, innerRef, theme, width, testId, } = this.props;
        return (React.createElement(ButtonTheme.Provider, { value: spotlightButtonTheme },
            React.createElement(Card, { testId: testId, ref: innerRef, heading: heading, headingAfterElement: headingAfterElement, actions: actions, actionsBeforeElement: actionsBeforeElement, components: components, image: image, theme: parent => {
                    const { container, ...others } = parent({});
                    return theme(() => ({
                        ...others,
                        container: {
                            background: P300,
                            color: N0,
                            width: `${Math.min(Math.max(width, 160), 600)}px`,
                            boxShadow: isFlat
                                ? undefined
                                : `0 4px 8px -2px ${N50A}, 0 0 1px ${N60A}`,
                            ...container,
                        },
                    }), {});
                } }, children)));
    }
}
SpotlightCard.defaultProps = {
    width: 400,
    isFlat: false,
    components: {},
    theme: (themeFn) => themeFn(),
};
export default React.forwardRef((props, ref) => (React.createElement(SpotlightCard, Object.assign({}, props, { innerRef: ref }))));
//# sourceMappingURL=SpotlightCard.js.map