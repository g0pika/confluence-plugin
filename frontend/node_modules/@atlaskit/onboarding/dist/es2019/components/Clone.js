import React from 'react';
import { TargetInner, TargetOverlay } from '../styled/Target';
function cloneAndOverrideStyles(node) {
    const shouldCloneChildren = true;
    const clonedNode = node.cloneNode(shouldCloneChildren);
    clonedNode.style.margin = '0';
    clonedNode.style.position = 'static';
    // The target may have other transforms applied. Avoid unintended side effects
    // by zeroing out "translate" rather than applying a value of "none".
    clonedNode.style.transform = 'translate(0, 0) translate3d(0, 0, 0)';
    return clonedNode;
}
const Clone = (props) => {
    const { pulse, style, target, targetBgColor, targetOnClick, targetNode, targetRadius, testId, } = props;
    return (React.createElement(TargetInner, { "data-testid": testId, pulse: pulse, bgColor: targetBgColor, radius: targetRadius, style: style },
        React.createElement("div", { 
            // eslint-disable-next-line react/no-danger
            dangerouslySetInnerHTML: {
                __html: cloneAndOverrideStyles(targetNode).outerHTML,
            }, style: { pointerEvents: 'none' } }),
        React.createElement(TargetOverlay, { onClick: targetOnClick ? event => targetOnClick({ event, target }) : undefined })));
};
export default Clone;
//# sourceMappingURL=Clone.js.map