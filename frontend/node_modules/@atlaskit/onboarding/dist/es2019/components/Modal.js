import React, { Component } from 'react';
import Button, { Theme as ButtonTheme } from '@atlaskit/button';
import Modal from '@atlaskit/modal-dialog';
import { ActionItem, Body, Heading, Image, Actions as ModalActions, } from '../styled/Modal';
import { modalButtonTheme } from './theme';
function noop() { }
export default class OnboardingModal extends Component {
    constructor() {
        super(...arguments);
        this.headerComponent = (props) => {
            const { header: HeaderElement, image: src } = props;
            const ImageElement = () => React.createElement(Image, { alt: "", src: src });
            return HeaderElement || ImageElement;
        };
        this.footerComponent = (props) => {
            const { footer: FooterElement, actions: actionList, experimental_shouldShowPrimaryButtonOnRight = false, } = props;
            const ActionsElement = () => actionList ? (React.createElement(ButtonTheme.Provider, { value: modalButtonTheme },
                React.createElement(ModalActions, { shouldReverseButtonOrder: experimental_shouldShowPrimaryButtonOnRight }, actionList.map(({ text, key, ...rest }, idx) => {
                    const variant = idx ? 'subtle-link' : 'primary';
                    return (React.createElement(ActionItem, { key: key || (typeof text === 'string' ? text : `${idx}`) },
                        React.createElement(Button, Object.assign({ appearance: variant, autoFocus: !idx }, rest), text)));
                })))) : null;
            return FooterElement || ActionsElement;
        };
    }
    render() {
        const { actions, children, heading, ...props } = this.props;
        return (React.createElement(Modal, Object.assign({ autoFocus: true, components: {
                Header: this.headerComponent(this.props),
                Footer: this.footerComponent(this.props),
            }, onClose: noop, scrollBehavior: "outside", shouldCloseOnOverlayClick: false, shouldCloseOnEscapePress: false }, props),
            React.createElement(Body, null,
                heading && React.createElement(Heading, null, heading),
                children)));
    }
}
//# sourceMappingURL=Modal.js.map