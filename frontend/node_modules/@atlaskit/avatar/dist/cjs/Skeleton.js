"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("@emotion/react");
var _constants = require("./constants");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } /** @jsx jsx */ // eslint-disable-next-line @repo/internal/fs/filename-pattern-match
var skeletonStyles = (0, _react.css)({
  display: 'inline-block',
  backgroundColor: "var(".concat(_constants.CSS_VAR_AVATAR_BGCOLOR, ")"),
  border: "".concat(_constants.BORDER_WIDTH, "px solid transparent")
});
var sizeStyles = Object.entries(_constants.AVATAR_SIZES).reduce(function (styles, _ref) {
  var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
    key = _ref2[0],
    size = _ref2[1];
  return _objectSpread(_objectSpread({}, styles), {}, (0, _defineProperty2.default)({}, key, (0, _react.css)({
    width: "".concat(size, "px"),
    height: "".concat(size, "px")
  })));
}, {});

// eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage
var radiusStyles = Object.entries(_constants.AVATAR_RADIUS).reduce(function (styles, _ref3) {
  var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),
    key = _ref4[0],
    size = _ref4[1];
  return _objectSpread(_objectSpread({}, styles), {}, (0, _defineProperty2.default)({}, key, (0, _react.css)({
    // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage
    borderRadius: "".concat(size, "px")
  })));
}, {});
var defaultRadiusStyles = (0, _react.css)({
  borderRadius: "var(--ds-border-radius-circle, 50%)"
});
var strongOpacityStyles = (0, _react.css)({
  opacity: 0.3
});
var defaultOpacityStyles = (0, _react.css)({
  opacity: 0.15
});

/**
 * __Skeleton__
 *
 * A skeleton is the loading state for the avatar component.
 *
 * - [Examples](https://atlassian.design/components/avatar/avatar-skeleton/examples)
 * - [Code](https://atlassian.design/components/avatar/avatar-skeleton/code)
 */
var Skeleton = function Skeleton(_ref5) {
  var size = _ref5.size,
    appearance = _ref5.appearance,
    color = _ref5.color,
    weight = _ref5.weight;
  return (0, _react.jsx)("div", {
    css: [skeletonStyles, sizeStyles[size !== null && size !== void 0 ? size : 'medium'], appearance === 'square' ? radiusStyles[size !== null && size !== void 0 ? size : 'medium'] : defaultRadiusStyles, weight === 'strong' ? strongOpacityStyles : defaultOpacityStyles],
    style: (0, _defineProperty2.default)({}, _constants.CSS_VAR_AVATAR_BGCOLOR, color !== null && color !== void 0 ? color : 'currentColor')
  });
};
var _default = exports.default = Skeleton;