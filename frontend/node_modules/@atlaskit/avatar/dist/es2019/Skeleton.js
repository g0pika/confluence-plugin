/** @jsx jsx */
// eslint-disable-next-line @repo/internal/fs/filename-pattern-match

import { css, jsx } from '@emotion/react';
import { AVATAR_RADIUS, AVATAR_SIZES, BORDER_WIDTH, CSS_VAR_AVATAR_BGCOLOR } from './constants';
const skeletonStyles = css({
  display: 'inline-block',
  backgroundColor: `var(${CSS_VAR_AVATAR_BGCOLOR})`,
  border: `${BORDER_WIDTH}px solid transparent`
});
const sizeStyles = Object.entries(AVATAR_SIZES).reduce((styles, [key, size]) => {
  return {
    ...styles,
    [key]: css({
      width: `${size}px`,
      height: `${size}px`
    })
  };
}, {});

// eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage
const radiusStyles = Object.entries(AVATAR_RADIUS).reduce((styles, [key, size]) => {
  return {
    ...styles,
    [key]: css({
      // eslint-disable-next-line @atlaskit/design-system/ensure-design-token-usage
      borderRadius: `${size}px`
    })
  };
}, {});
const defaultRadiusStyles = css({
  borderRadius: "var(--ds-border-radius-circle, 50%)"
});
const strongOpacityStyles = css({
  opacity: 0.3
});
const defaultOpacityStyles = css({
  opacity: 0.15
});

/**
 * __Skeleton__
 *
 * A skeleton is the loading state for the avatar component.
 *
 * - [Examples](https://atlassian.design/components/avatar/avatar-skeleton/examples)
 * - [Code](https://atlassian.design/components/avatar/avatar-skeleton/code)
 */
const Skeleton = ({
  size,
  appearance,
  color,
  weight
}) => jsx("div", {
  css: [skeletonStyles, sizeStyles[size !== null && size !== void 0 ? size : 'medium'], appearance === 'square' ? radiusStyles[size !== null && size !== void 0 ? size : 'medium'] : defaultRadiusStyles, weight === 'strong' ? strongOpacityStyles : defaultOpacityStyles],
  style: {
    [CSS_VAR_AVATAR_BGCOLOR]: color !== null && color !== void 0 ? color : 'currentColor'
  }
});
export default Skeleton;