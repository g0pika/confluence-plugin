export class InProductTestCase {
  constructor(opts) {
    this._id = opts.id;
    this._title = opts.title;
    this._assertions = opts.assertions;
    this._testOptions = opts.testOptions;
  }
  get assertions() {
    if (this._precondition) {
      const succeeded = this._precondition();
      if (!succeeded) {
        throw new Error(`Test execution for ${this._id} failed. You failed a precondition! ðŸ˜±`);
      }
    }
    return this._assertions;
  }
  shouldSkipTest() {
    var _this$_testOptions;
    const runOnly = (_this$_testOptions = this._testOptions) === null || _this$_testOptions === void 0 ? void 0 : _this$_testOptions.runOnly;
    if (runOnly) {
      if (!Array.isArray(runOnly)) {
        throw new Error('TestOpts.runOnly should be an array of IDs ðŸ™€.');
      }
      // Skip test if in list of IDs or do not (if it is not present).
      return runOnly.includes(this._id);
    }
    // By default, if not specified, don't skip any tests.
    return false;
  }
  test(cy) {
    if (!this.shouldSkipTest()) {
      it(this._title, () => {
        this._assertions(cy);
      });
    }
  }
}